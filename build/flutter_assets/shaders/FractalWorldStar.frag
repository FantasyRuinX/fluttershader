{
  "sksl": {
    "entrypoint": "FractalWorldStar_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uSize;\nuniform vec4 uColor;\nuniform float uTime;\nuniform vec2 uTapOffset;\n\nvec4 FragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec3 FLT_flutter_local_palette(float t)\n{\n    vec3 a = vec3(0.5);\n    vec3 b = vec3(0.5);\n    vec3 c = vec3(1.0);\n    vec3 d = vec3(0.263000011444091796875, 0.41600000858306884765625, 0.556999981403350830078125);\n    return a + (b * cos(((c * t) + d) * 6.28318023681640625));\n}\n\nfloat FLT_flutter_local_sdfSphere(vec2 uv, float size)\n{\n    return length(uv) - size;\n}\n\nfloat FLT_flutter_local_sdfSquare(vec2 uv)\n{\n    return (length(uv.x * uv.y) + length(uv.x)) + length(uv.y);\n}\n\nvoid FLT_main()\n{\n    vec2 uv_1 = ((FLT_flutter_local_FlutterFragCoord() / uSize) * 2.0) - vec2(1.0);\n    vec2 offset = ((uTapOffset / uSize) * 2.0) - vec2(1.0);\n    uv_1 -= vec2(0.0, 1.0);\n    uv_1 -= (offset - vec2(0.0, 1.0));\n    vec2 uvOriginal = uv_1;\n    float spd = uTime * 0.5;\n    float param = spd;\n    vec3 add_colour = FLT_flutter_local_palette(param);\n    vec2 param_1 = uvOriginal;\n    float param_2 = 0.25;\n    float void_center = FLT_flutter_local_sdfSphere(param_1, param_2);\n    void_center = sin((void_center * 2.0) - spd) / 2.0;\n    void_center = abs(void_center);\n    void_center = smoothstep(0.0, 0.100000001490116119384765625, void_center);\n    for (float i = 0.0; i < 3.0; i += 1.0)\n    {\n        vec2 param_3 = uvOriginal;\n        float param_4 = 0.5;\n        float uv_distort = FLT_flutter_local_sdfSphere(param_3, param_4);\n        uv_distort = sin((uv_distort * 2.0) - spd) / 2.0;\n        uv_distort = 0.5 / uv_distort;\n        uv_1 /= vec2(uv_distort);\n        uv_1 = fract(uv_1 * 1.5) - vec2(0.5);\n        float angle = (45.0 + (i * 45.0)) + spd;\n        uv_1 *= mat2(vec2(cos(angle), -sin(angle)), vec2(sin(angle), cos(angle)));\n        vec2 param_5 = uv_1;\n        float sdf = FLT_flutter_local_sdfSquare(param_5) * exp(-length(uvOriginal));\n        sdf = sin((sdf * 4.0) - spd) / 4.0;\n        sdf = abs(sdf);\n        sdf = 0.00999999977648258209228515625 / sdf;\n        float param_6 = spd;\n        add_colour = FLT_flutter_local_palette(param_6) * sdf;\n    }\n    vec3 final_colour = uColor.xyz;\n    uv_1 = uvOriginal;\n    float final_sdf = (0.00999999977648258209228515625 / length(uv_1.y + sin((uv_1.x * 2.0) + spd))) + (0.00999999977648258209228515625 / length(uv_1.y + cos((uv_1.x * 2.0) + spd)));\n    vec4 colorAlphaAdded = vec4(final_colour * final_sdf, uColor.w);\n    FragColor = colorAlphaAdded;\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return FragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "uSize",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "uColor",
        "rows": 4,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "uTime",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "uTapOffset",
        "rows": 2,
        "type": 10
      }
    ]
  }
}